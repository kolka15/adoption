const express = require('express');
const next = require('next');
const url = require('url');
const cluster = require('cluster');

const dev = process.env.NODE_ENV !== 'production';
const port = process.env.PORT || 3003;

// Multi-process to utilize CPU cores.
if (!dev && cluster.isMaster) {
    console.log(`Node cluster master ${process.pid} is running`);

    // Fork workers.
    for (let i = 0; i < 5; i++) {
        cluster.fork();
    }

    cluster.on('exit', (worker, code, signal) => {
        console.error(`Node cluster worker ${worker.process.pid} exited: code ${code}, signal ${signal}`);
        cluster.fork();
    });

} else {
    const nextApp = next({ dir: '.', dev });
    const nextHandler = nextApp.getRequestHandler();

    nextApp.prepare()
        .then(() => {
            const server = express();

            server.get('*', (req, res) => {
                const parsedUrl = url.parse(req.url, true);
                nextHandler(req, res, parsedUrl);
            });

            server.listen(port, (err) => {
                if (err) throw err;
                console.log(`Node cluster worker ${process.pid} listening on port ${port}`);
            });
        });
}
